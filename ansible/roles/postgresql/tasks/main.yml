---
  - set_fact: postgresql_installed="true"

  - name: Create postgresql user
    postgresql_user:
      name: "{{database_user}}"
      password: "{{database_password}}"
      state: present
    become: true
    become_user: postgres

  - name: Create postgresql database
    postgresql_db:
      name: "{{database_name}}"
      owner: "{{database_user}}"
      template: template1
      state: present
    become: true
    become_user: postgres

  - name: Grant all privileges on database to user
    postgresql_privs:
      database: "{{database_name}}"
      privs: ALL
      roles: "{{database_user}}"
      state: present
      type: database
    become: true
    become_user: postgres

  - name: "Enable postgres hstore"
    become: true
    become_user: postgres
    postgresql_ext:
      db: "{{database_name}}"
      name: hstore
      state: present

  - include: backups.yml
    become: true


- name: Grab Psql version
  shell: psql --version
  register: stats_psql_version
  when: send_stats == true and stats_url is defined and stats_api_key is defined
  tags:
    - maintenance
    - stats

- name: Send Psql stats to URL
  uri:
    url: "{{stats_url}}"
    method: POST
    headers:
      X-API-Version: 1
      X-Client-Api-key: "{{stats_api_key}}"
    body_format: json
    body:
      client_stat:
        key: psql_version
        value: "{{stats_psql_version.stdout}}"
        hostname: "{{hostname}}"
  when: send_stats == true and stats_url is defined and stats_api_key is defined
  tags:
    - maintenance
    - stats
